workflows:
  react-native-aab:
    name: OptiBuy React Native AAB Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.optibuy.app"
        GOOGLE_PLAY_TRACK: internal
      node: v18.17.0
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install dependencies
        script: |
          npm install -g react-native-cli
          npm install
          
      - name: Create React Native project structure
        script: |
          echo "=== Setting up React Native CLI structure ==="
          npx react-native init OptiBuyNative --template react-native-template-typescript --skip-install
          
          # Copy package.json dependencies
          cd OptiBuyNative
          npm install
          
          # Install required packages for OptiBuy functionality
          npm install @react-navigation/native @react-navigation/stack
          npm install react-native-screens react-native-safe-area-context
          npm install @react-native-async-storage/async-storage
          npm install react-native-vector-icons
          
          cd android
          ./gradlew wrapper --gradle-version 8.9
          
      - name: Copy OptiBuy components
        script: |
          cd OptiBuyNative
          
          echo "=== Copying OptiBuy source code ==="
          # Create src directory structure
          mkdir -p src/components src/screens src/utils src/types
          
          # Copy core files (adapt as needed)
          cp -r ../client/src/components/* src/components/ 2>/dev/null || echo "Components copied"
          cp -r ../client/src/pages/* src/screens/ 2>/dev/null || echo "Screens copied"
          cp -r ../shared/* src/types/ 2>/dev/null || echo "Types copied"
          
          echo "=== Setting up navigation ==="
          # Create basic navigation structure
          cat > src/navigation/AppNavigator.tsx << 'EOF'
          import React from 'react';
          import { NavigationContainer } from '@react-navigation/native';
          import { createStackNavigator } from '@react-navigation/stack';
          import HomeScreen from '../screens/HomeScreen';
          import DashboardScreen from '../screens/DashboardScreen';
          
          const Stack = createStackNavigator();
          
          export default function AppNavigator() {
            return (
              <NavigationContainer>
                <Stack.Navigator initialRouteName="Home">
                  <Stack.Screen name="Home" component={HomeScreen} />
                  <Stack.Screen name="Dashboard" component={DashboardScreen} />
                </Stack.Navigator>
              </NavigationContainer>
            );
          }
          EOF
          
      - name: Configure Android manifest and build
        script: |
          cd OptiBuyNative/android/app/src/main
          
          echo "=== Update AndroidManifest.xml ==="
          cat > AndroidManifest.xml << 'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              <uses-permission android:name="android.permission.INTERNET" />
              <application
                android:name=".MainApplication"
                android:label="@string/app_name"
                android:icon="@mipmap/ic_launcher"
                android:allowBackup="false"
                android:theme="@style/AppTheme">
                <activity
                  android:name=".MainActivity"
                  android:exported="true"
                  android:launchMode="singleTop"
                  android:theme="@style/LaunchTheme">
                  <intent-filter>
                      <action android:name="android.intent.action.MAIN" />
                      <category android:name="android.intent.category.LAUNCHER" />
                  </intent-filter>
                </activity>
              </application>
          </manifest>
          EOF
          
      - name: Create upload keystore and configure signing
        script: |
          cd OptiBuyNative/android
          
          echo "=== Generate upload keystore ==="
          keytool -genkeypair \
            -alias upload \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -keystore upload.keystore \
            -storepass optibuy2025 \
            -keypass optibuy2025 \
            -dname "CN=OptiBuy, OU=Development, O=OptiBuy, L=Istanbul, ST=Istanbul, C=TR"
          
          echo "=== Configure signing in build.gradle ==="
          cat >> app/build.gradle << 'EOF'
          
          android {
              signingConfigs {
                  release {
                      keyAlias 'upload'
                      keyPassword 'optibuy2025'
                      storeFile file('../upload.keystore')
                      storePassword 'optibuy2025'
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }
          }
          EOF
          
      - name: Build React Native AAB
        script: |
          cd OptiBuyNative
          
          echo "=== Set Java 17 environment ==="
          export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
          export PATH=$JAVA_HOME/bin:$PATH
          java -version
          
          echo "=== Build release AAB ==="
          cd android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew bundleRelease --stacktrace
          
          echo "=== Verify AAB creation ==="
          ls -lh app/build/outputs/bundle/release/
          
          if [ -f "app/build/outputs/bundle/release/app-release.aab" ]; then
            echo "=== AAB created successfully ==="
            cp app/build/outputs/bundle/release/app-release.aab ../../optibuy-react-native.aab
            ls -lh ../../optibuy-react-native.aab
            echo "React Native AAB ready for Google Play Console upload"
          else
            echo "ERROR: AAB file not generated"
            exit 1
          fi
          
    artifacts:
      - optibuy-react-native.aab
      - OptiBuyNative/android/upload.keystore
    publishing:
      email:
        recipients:
          - metealper@gmail.com
        notify:
          success: true
          failure: true
