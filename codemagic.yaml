# Google Play App Signing Compatible Build
# Generates AAB for Google Play Console automatic signing

workflows:
  play-signing-aab:
    name: OptiBuy Play Signing AAB
    max_build_duration: 60
    instance_type: mac_mini_m1
    
    environment:
      groups:
        - android_signing
      vars:
        PACKAGE_NAME: "com.optibuy.collective"
        
    scripts:
      - name: Create Project
        script: |
          echo "=== Creating React Native project ==="
          npx react-native init OptiBuy --template react-native-template-typescript
          cd OptiBuy
          
          # Update app content
          cat > App.tsx << 'EOF'
          import React from 'react';
          import {SafeAreaView, Text, StyleSheet, TouchableOpacity, Alert} from 'react-native';

          function App(): React.JSX.Element {
            return (
              <SafeAreaView style={styles.container}>
                <Text style={styles.title}>OptiBuy</Text>
                <Text style={styles.subtitle}>Collective Purchasing Platform</Text>
                <Text style={styles.description}>
                  Discover invisible buying neighbors for bulk discounts
                </Text>
                <TouchableOpacity 
                  style={styles.button}
                  onPress={() => Alert.alert('Welcome', 'Welcome to OptiBuy!')}
                >
                  <Text style={styles.buttonText}>Get Started</Text>
                </TouchableOpacity>
              </SafeAreaView>
            );
          }

          const styles = StyleSheet.create({
            container: {
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: '#f5f5f5',
              padding: 20,
            },
            title: {
              fontSize: 32,
              fontWeight: 'bold',
              color: '#333',
              marginBottom: 10,
            },
            subtitle: {
              fontSize: 18,
              color: '#666',
              marginBottom: 20,
            },
            description: {
              fontSize: 16,
              color: '#888',
              textAlign: 'center',
              marginBottom: 30,
            },
            button: {
              backgroundColor: '#007AFF',
              paddingHorizontal: 30,
              paddingVertical: 15,
              borderRadius: 8,
            },
            buttonText: {
              color: 'white',
              fontSize: 18,
              fontWeight: '600',
            },
          });

          export default App;
          EOF

      - name: Configure for Play App Signing
        script: |
          cd OptiBuy
          
          # Update package name
          sed -i 's/com.optibuy/com.optibuy.collective/g' android/app/build.gradle
          sed -i 's/com.optibuy/com.optibuy.collective/g' android/app/src/main/AndroidManifest.xml
          
          # Create debug keystore (Google Play will re-sign automatically)
          echo "=== Creating debug signing config ==="
          cat >> android/app/build.gradle << 'EOF'

          android {
              signingConfigs {
                  debug {
                      storeFile file('debug.keystore')
                      storePassword 'android'
                      keyAlias 'androiddebugkey' 
                      keyPassword 'android'
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.debug
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }
          }
          EOF
          
          # Create debug keystore
          keytool -genkey -v -keystore android/app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"

      - name: Build AAB for Play Signing
        script: |
          cd OptiBuy/android
          
          # Set Java environment
          export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
          export PATH=$JAVA_HOME/bin:$PATH
          
          echo "=== Building AAB for Google Play App Signing ==="
          chmod +x gradlew
          ./gradlew clean
          ./gradlew bundleRelease
          
          echo "=== AAB generated for Play Console ==="
          find . -name "*.aab" -exec ls -lh {} \;
          
          cp app/build/outputs/bundle/release/app-release.aab ../../optibuy-play-signing.aab
          ls -lh ../../optibuy-play-signing.aab

    artifacts:
      - optibuy-play-signing.aab
