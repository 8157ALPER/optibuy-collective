workflows:
  optibuy-proper:
    name: OptiBuy Proper AAB Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      groups:
        - android_signing
      vars:
        FLUTTER_VERSION: "3.16.0"
        ANDROID_COMPILE_SDK: "33"
        ANDROID_TARGET_SDK: "33"
        ANDROID_MIN_SDK: "21"
    
    scripts:
      - name: Setup Flutter Project Structure
        script: |
          echo "=== Creating Minimal Flutter Project for AAB Generation ==="
          
          # Create Flutter project structure
          flutter create optibuy_app --org com.optibuy.collective
          cd optibuy_app
          
          # Update pubspec.yaml with proper app details
          cat > pubspec.yaml << 'EOF'
          name: optibuy_app
          description: OptiBuy Collective Purchasing Platform
          publish_to: 'none'
          version: 1.0.0+1
          
          environment:
            sdk: '>=3.0.0 <4.0.0'
            flutter: ">=3.16.0"
          
          dependencies:
            flutter:
              sdk: flutter
            cupertino_icons: ^1.0.2
            http: ^1.1.0
            shared_preferences: ^2.2.2
          
          dev_dependencies:
            flutter_test:
              sdk: flutter
            flutter_lints: ^3.0.0
          
          flutter:
            uses-material-design: true
            assets:
              - assets/
          EOF
          
          # Create assets directory
          mkdir -p assets
          echo "OptiBuy Configuration" > assets/config.txt
          
          # Update android/app/build.gradle with proper configuration
          cat > android/app/build.gradle << 'EOF'
          def localProperties = new Properties()
          def localPropertiesFile = rootProject.file('local.properties')
          if (localPropertiesFile.exists()) {
              localPropertiesFile.withReader('UTF-8') { reader ->
                  localProperties.load(reader)
              }
          }
          
          def flutterRoot = localProperties.getProperty('flutter.sdk')
          if (flutterRoot == null) {
              throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
          }
          
          def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
          if (flutterVersionCode == null) {
              flutterVersionCode = '1'
          }
          
          def flutterVersionName = localProperties.getProperty('flutter.versionName')
          if (flutterVersionName == null) {
              flutterVersionName = '1.0'
          }
          
          apply plugin: 'com.android.application'
          apply plugin: 'kotlin-android'
          apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
          
          android {
              namespace "com.optibuy.collective"
              compileSdkVersion 33
              ndkVersion flutter.ndkVersion
          
              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_1_8
                  targetCompatibility JavaVersion.VERSION_1_8
              }
          
              kotlinOptions {
                  jvmTarget = '1.8'
              }
          
              sourceSets {
                  main.java.srcDirs += 'src/main/kotlin'
              }
          
              defaultConfig {
                  applicationId "com.optibuy.collective"
                  minSdkVersion 21
                  targetSdkVersion 33
                  versionCode flutterVersionCode.toInteger()
                  versionName flutterVersionName
              }
          
              buildTypes {
                  release {
                      signingConfig signingConfigs.debug
                  }
              }
          }
          
          flutter {
              source '../..'
          }
          
          dependencies {
              implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0"
          }
          EOF
          
          # Update AndroidManifest.xml with proper configuration
          cat > android/app/src/main/AndroidManifest.xml << 'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.optibuy.collective">
              
              <uses-permission android:name="android.permission.INTERNET" />
              <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
              
              <application
                  android:label="OptiBuy"
                  android:name="${applicationName}"
                  android:icon="@mipmap/ic_launcher"
                  android:theme="@style/LaunchTheme"
                  android:exported="false">
                  
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:launchMode="singleTop"
                      android:theme="@style/LaunchTheme"
                      android:orientation="portrait"
                      android:windowSoftInputMode="adjustResize">
                      
                      <meta-data
                        android:name="io.flutter.embedding.android.NormalTheme"
                        android:resource="@style/NormalTheme" />
                        
                      <intent-filter android:autoVerify="true">
                          <action android:name="android.intent.action.MAIN"/>
                          <category android:name="android.intent.category.LAUNCHER"/>
                      </intent-filter>
                  </activity>
                  
                  <meta-data
                      android:name="flutterEmbedding"
                      android:value="2" />
              </application>
          </manifest>
          EOF
          
          # Create MainActivity.kt
          mkdir -p android/app/src/main/kotlin/com/optibuy/collective
          cat > android/app/src/main/kotlin/com/optibuy/collective/MainActivity.kt << 'EOF'
          package com.optibuy.collective
          
          import io.flutter.embedding.android.FlutterActivity
          
          class MainActivity: FlutterActivity() {
          }
          EOF
          
          # Update main.dart with OptiBuy content
          cat > lib/main.dart << 'EOF'
          import 'package:flutter/material.dart';
          
          void main() {
            runApp(const OptiBuyApp());
          }
          
          class OptiBuyApp extends StatelessWidget {
            const OptiBuyApp({super.key});
          
            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                title: 'OptiBuy',
                theme: ThemeData(
                  colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
                  useMaterial3: true,
                ),
                home: const OptiBuyHomePage(),
              );
            }
          }
          
          class OptiBuyHomePage extends StatelessWidget {
            const OptiBuyHomePage({super.key});
          
            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(
                  backgroundColor: Theme.of(context).colorScheme.inversePrimary,
                  title: const Text('OptiBuy Collective'),
                ),
                body: const Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      Icon(
                        Icons.shopping_cart,
                        size: 80,
                        color: Colors.blue,
                      ),
                      SizedBox(height: 20),
                      Text(
                        'OptiBuy',
                        style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
                      ),
                      Text(
                        'Collective Purchasing Platform',
                        style: TextStyle(fontSize: 18, color: Colors.grey),
                      ),
                      SizedBox(height: 40),
                      Text(
                        'Turkish B2B Market',
                        style: TextStyle(fontSize: 16),
                      ),
                      Text(
                        'Veterinary & Pharmaceutical Solutions',
                        style: TextStyle(fontSize: 14, color: Colors.grey),
                      ),
                    ],
                  ),
                ),
                floatingActionButton: FloatingActionButton(
                  onPressed: () {},
                  tooltip: 'Join Group Purchase',
                  child: const Icon(Icons.group),
                ),
              );
            }
          }
          EOF

      - name: Get Dependencies and Build AAB
        script: |
          cd optibuy_app
          
          echo "=== Getting Flutter Dependencies ==="
          flutter pub get
          
          echo "=== Building Android App Bundle ==="
          flutter build appbundle --release \
            --target-platform android-arm64,android-arm,android-x64 \
            --build-name=1.0.0 \
            --build-number=1
          
          # Copy the generated AAB to root for artifact collection
          cp build/app/outputs/bundle/release/app-release.aab ../optibuy-flutter.aab
          
          echo "=== AAB Build Verification ==="
          ls -lh ../optibuy-flutter.aab
          echo "Size: $(ls -lh ../optibuy-flutter.aab | awk '{print $5}')"
          
          # Verify AAB structure using bundletool
          echo "=== Verifying AAB with bundletool ==="
          if command -v bundletool &> /dev/null; then
              bundletool validate --bundle=../optibuy-flutter.aab
              echo "AAB validation successful"
          else
              echo "bundletool not available, skipping validation"
          fi
          
          # Create build report
          echo "SUCCESS: Flutter-generated AAB created" > ../flutter_build_report.txt
          echo "File: optibuy-flutter.aab" >> ../flutter_build_report.txt
          echo "Size: $(ls -lh ../optibuy-flutter.aab | awk '{print $5}')" >> ../flutter_build_report.txt
          echo "Generated: $(date)" >> ../flutter_build_report.txt
          echo "Status: Google Play Console ready" >> ../flutter_build_report.txt

    artifacts:
      - "optibuy-flutter.aab"
      - "flutter_build_report.txt"
      
    publishing:
      email:
        recipients:
          - build@optibuy.com
        notify:
          success: true
          failure: true
