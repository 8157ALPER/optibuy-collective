workflows:
  optibuy:
    name: OptiBuy Android Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - android_signing
      vars:
        PACKAGE_NAME: "com.optibuy.collective"
        JAVA_HOME: /Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
    scripts:
      - name: Create React App
        script: |
          echo "Creating minimal React app..."
          
          # Create package.json
          cat > package.json << 'EOF'
          {
            "name": "optibuy",
            "version": "1.0.0",
            "scripts": {
              "build": "vite build"
            },
            "dependencies": {
              "react": "^18.2.0",
              "react-dom": "^18.2.0"
            },
            "devDependencies": {
              "vite": "^5.0.0",
              "@vitejs/plugin-react": "^4.0.0"
            }
          }
          EOF
          
          # Install dependencies
          npm install
          
          # Create basic React app structure
          mkdir -p src public
          
          # Create index.html
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>OptiBuy</title>
          </head>
          <body>
            <div id="root"></div>
            <script type="module" src="/src/main.tsx"></script>
          </body>
          </html>
          EOF
          
          # Create main.tsx
          cat > src/main.tsx << 'EOF'
          import React from 'react'
          import ReactDOM from 'react-dom/client'
          import App from './App'
          
          ReactDOM.createRoot(document.getElementById('root')!).render(<App />)
          EOF
          
          # Create App.tsx
          cat > src/App.tsx << 'EOF'
          import React from 'react'
          
          export default function App() {
            return (
              <div style={{padding: '20px'}}>
                <h1>OptiBuy - Collective Purchasing Platform</h1>
                <p>Connecting buyers for better prices</p>
              </div>
            )
          }
          EOF
          
          # Create vite.config.ts
          cat > vite.config.ts << 'EOF'
          import { defineConfig } from 'vite'
          import react from '@vitejs/plugin-react'
          
          export default defineConfig({
            plugins: [react()],
            build: {
              outDir: 'dist'
            }
          })
          EOF
          
      - name: Build Web Assets
        script: |
          echo "Building web assets..."
          npm run build
          ls -la dist/
          
      - name: Setup Capacitor
        script: |
          echo "Setting up Capacitor..."
          npm install @capacitor/core @capacitor/cli @capacitor/android
          
          # Create capacitor.config.ts
          cat > capacitor.config.ts << 'EOF'
          import { CapacitorConfig } from '@capacitor/cli';
          
          const config: CapacitorConfig = {
            appId: 'com.optibuy.collective',
            appName: 'OptiBuy',
            webDir: 'dist',
            server: {
              androidScheme: 'https'
            }
          };
          
          export default config;
          EOF
          
          # Initialize Capacitor
          npx cap init --web-dir=dist
          npx cap add android
          
      - name: Build Android AAB
        script: |
          echo "Building Android AAB..."
          cd android
          
          # Set proper permissions
          chmod +x gradlew
          
          # Build AAB
          ./gradlew bundleRelease
          
          # Copy AAB to artifacts
          cp app/build/outputs/bundle/release/app-release.aab ../optibuy-clean.aab
          
          echo "AAB build completed"
          ls -la ../optibuy-clean.aab
          
    artifacts:
      - optibuy-clean.aab
      - android/app/build/outputs/bundle/release/app-release.aab
    publishing:
      email:
        recipients:
          - your-metealper@gmail.com
        notify:
          success: true
          failure: true
