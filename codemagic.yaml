# Using Valid AAB + Upload Certificate Generation for Google Play Managed Signing
# Uses existing successful 2.7MB AAB file with upload certificate method

workflows:
  valid-aab-upload-cert:
    name: OptiBuy Valid AAB - Upload Certificate Method
    max_build_duration: 30
    instance_type: mac_mini_m1
    
    environment:
      vars:
        PACKAGE_NAME: "com.optibuy.collective"
      node: 18
    
    scripts:
      - name: Use Valid AAB and Generate Upload Certificate
        script: |
          echo "=== Using existing valid AAB file ==="
          
          # Copy the valid AAB file that was successfully built (2.7MB)
          cp "./attached_assets/app-release (1)_1754380785018.aab" ./optibuy-valid.aab
          
          echo "=== Verifying valid AAB file ==="
          ls -lh optibuy-valid.aab
          file optibuy-valid.aab
          echo "Valid AAB file size: $(du -h optibuy-valid.aab)"
          
          echo "=== Generating upload certificate for Google Play managed signing ==="
          
          # Generate private key for upload certificate
          openssl genrsa -out upload-key.pem 2048
          
          # Generate certificate signing request
          openssl req -new -key upload-key.pem -out upload-request.csr -subj "/C=TR/ST=Istanbul/L=Istanbul/O=OptiBuy/OU=Mobile/CN=com.optibuy.collective"
          
          # Generate self-signed upload certificate (for Google Play Console)
          openssl x509 -req -days 10000 -in upload-request.csr -signkey upload-key.pem -out upload-certificate.pem
          
          echo "=== Upload certificate information ==="
          openssl x509 -in upload-certificate.pem -text -noout | head -20
          
          echo "=== Certificate fingerprint (for Google Play Console) ==="
          openssl x509 -in upload-certificate.pem -fingerprint -sha256 -noout
          openssl x509 -in upload-certificate.pem -fingerprint -sha1 -noout
          
          echo "=== Files ready for Google Play Console ==="
          echo "1. AAB file: optibuy-valid.aab (2.7MB - ready for upload)"
          echo "2. Upload certificate: upload-certificate.pem (for managed signing setup)"
          
          ls -lh optibuy-valid.aab upload-certificate.pem
          
          echo "=== Instructions for Google Play Console ==="
          echo "1. Upload optibuy-valid.aab to Google Play Console"
          echo "2. Choose 'Export and install a key (without using a Java keystore)'"
          echo "3. Upload upload-certificate.pem when prompted"
          echo "4. Google Play will handle app signing with their own keys"

    artifacts:
      - optibuy-valid.aab
      - upload-certificate.pem
      - upload-key.pem
    publishing:
      email:
        recipients:
          - your-metealper@gmail.com
        notify:
          success: true
          failure: true
