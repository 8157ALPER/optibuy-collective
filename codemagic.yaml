workflows:
  optibuy:
    name: OptiBuy - Minimal Working Android AAB
    max_build_duration: 90
    instance_type: mac_mini_m1
    environment:
      groups:
        - android_signing
      vars:
        PACKAGE_NAME: "com.optibuy.collective"
        ANDROID_SDK_ROOT: /usr/local/share/android-sdk
        ANDROID_HOME: /usr/local/share/android-sdk
        JAVA_HOME: /Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
    scripts:
      - name: Create Minimal Android Project
        script: |
          echo "=== Creating Minimal Android Project ==="
          
          mkdir -p OptiBuy/android/app/src/main/java/com/optibuy/collective
          mkdir -p OptiBuy/android/app/src/main/res/values
          mkdir -p OptiBuy/android/app/src/main/res/layout
          mkdir -p OptiBuy/android/app/src/main/res/mipmap-hdpi
          mkdir -p OptiBuy/android/app/src/main/res/mipmap-mdpi
          mkdir -p OptiBuy/android/app/src/main/res/mipmap-xhdpi
          mkdir -p OptiBuy/android/app/src/main/res/mipmap-xxhdpi
          mkdir -p OptiBuy/android/app/src/main/res/mipmap-xxxhdpi
          mkdir -p OptiBuy/android/gradle/wrapper
          
          cd OptiBuy
          
          echo "Creating gradle wrapper properties..."
          cat > android/gradle/wrapper/gradle-wrapper.properties << 'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.1.1-all.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          
          echo "Creating gradle.properties..."
          cat > android/gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.enableJetifier=true
          android.bundle.enableUncompressedNativeLibs=false
          android.enableR8.fullMode=true
          org.gradle.parallel=true
          org.gradle.configureondemand=true
          org.gradle.daemon=true
          MYAPP_UPLOAD_STORE_FILE=upload-keystore.jks
          MYAPP_UPLOAD_KEY_ALIAS=upload
          MYAPP_UPLOAD_STORE_PASSWORD=optibuy_upload_2025
          MYAPP_UPLOAD_KEY_PASSWORD=optibuy_upload_2025
          EOF
          
          echo "Creating settings.gradle..."
          cat > android/settings.gradle << 'EOF'
          rootProject.name = 'OptiBuy'
          include ':app'
          project(':app').projectDir = new File(rootProject.projectDir, 'app')
          EOF
          
          echo "Creating root build.gradle..."
          cat > android/build.gradle << 'EOF'
          buildscript {
              ext {
                  buildToolsVersion = "34.0.0"
                  minSdkVersion = 21
                  compileSdkVersion = 35
                  targetSdkVersion = 35
              }
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.1.4'
              }
          }
          
          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          EOF
          
          echo "Creating app build.gradle..."
          cat > android/app/build.gradle << 'EOF'
          apply plugin: 'com.android.application'
          
          android {
              namespace 'com.optibuy.collective'
              compileSdkVersion rootProject.ext.compileSdkVersion
              buildToolsVersion rootProject.ext.buildToolsVersion
              
              defaultConfig {
                  applicationId "com.optibuy.collective"
                  minSdkVersion rootProject.ext.minSdkVersion
                  targetSdkVersion rootProject.ext.targetSdkVersion
                  versionCode 2
                  versionName "1.2.0"
              }
              
              signingConfigs {
                  debug {
                      storeFile file('debug.keystore')
                      storePassword 'android'
                      keyAlias 'androiddebugkey'
                      keyPassword 'android'
                  }
                  release {
                      if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                          storeFile file(MYAPP_UPLOAD_STORE_FILE)
                          storePassword MYAPP_UPLOAD_STORE_PASSWORD
                          keyAlias MYAPP_UPLOAD_KEY_ALIAS
                          keyPassword MYAPP_UPLOAD_KEY_PASSWORD
                      }
                  }
              }
              
              buildTypes {
                  debug {
                      signingConfig signingConfigs.debug
                  }
                  release {
                      minifyEnabled true
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                      signingConfig signingConfigs.release
                  }
              }
              
              bundle {
                  language {
                      enableSplit = false
                  }
                  density {
                      enableSplit = true
                  }
                  abi {
                      enableSplit = true
                  }
              }
          }
          
          dependencies {
              implementation 'androidx.appcompat:appcompat:1.6.1'
              implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
              implementation 'com.google.android.material:material:1.9.0'
          }
          EOF
          
          echo "Creating AndroidManifest.xml..."
          cat > android/app/src/main/AndroidManifest.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              <uses-permission android:name="android.permission.INTERNET" />
              
              <application
                  android:allowBackup="true"
                  android:icon="@mipmap/ic_launcher"
                  android:label="@string/app_name"
                  android:theme="@style/AppTheme">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF
          
          echo "Project structure created successfully"
          
      - name: Create Android Resources and Code
        script: |
          echo "=== Creating Android Resources and Code ==="
          cd OptiBuy
          
          echo "Creating strings.xml..."
          cat > android/app/src/main/res/values/strings.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="app_name">OptiBuy</string>
              <string name="welcome_title">OptiBuy</string>
              <string name="welcome_subtitle">Collective Purchasing Platform</string>
              <string name="welcome_description">Ready for Google Play Store deployment</string>
          </resources>
          EOF
          
          echo "Creating styles.xml..."
          cat > android/app/src/main/res/values/styles.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
                  <item name="colorPrimary">#4CAF50</item>
                  <item name="colorPrimaryDark">#388E3C</item>
                  <item name="colorAccent">#FF5722</item>
              </style>
          </resources>
          EOF
          
          echo "Creating activity_main.xml layout..."
          cat > android/app/src/main/res/layout/activity_main.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:app="http://schemas.android.com/apk/res-auto"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:background="#f8f9fa">
          
              <TextView
                  android:id="@+id/title"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/welcome_title"
                  android:textSize="32sp"
                  android:textStyle="bold"
                  android:textColor="#000000"
                  android:layout_marginBottom="10dp"
                  app:layout_constraintTop_toTopOf="parent"
                  app:layout_constraintBottom_toBottomOf="parent"
                  app:layout_constraintLeft_toLeftOf="parent"
                  app:layout_constraintRight_toRightOf="parent"
                  app:layout_constraintVertical_chainStyle="packed" />
          
              <TextView
                  android:id="@+id/subtitle"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/welcome_subtitle"
                  android:textSize="18sp"
                  android:textColor="#666666"
                  android:layout_marginBottom="20dp"
                  app:layout_constraintTop_toBottomOf="@id/title"
                  app:layout_constraintLeft_toLeftOf="parent"
                  app:layout_constraintRight_toRightOf="parent" />
          
              <TextView
                  android:id="@+id/description"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/welcome_description"
                  android:textSize="16sp"
                  android:textColor="#4CAF50"
                  android:textStyle="bold"
                  app:layout_constraintTop_toBottomOf="@id/subtitle"
                  app:layout_constraintLeft_toLeftOf="parent"
                  app:layout_constraintRight_toRightOf="parent" />
          
          </androidx.constraintlayout.widget.ConstraintLayout>
          EOF
          
          echo "Creating MainActivity.java..."
          cat > android/app/src/main/java/com/optibuy/collective/MainActivity.java << 'EOF'
          package com.optibuy.collective;
          
          import androidx.appcompat.app.AppCompatActivity;
          import android.os.Bundle;
          
          public class MainActivity extends AppCompatActivity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  setContentView(R.layout.activity_main);
              }
          }
          EOF
          
          echo "Creating proguard-rules.pro..."
          cat > android/app/proguard-rules.pro << 'EOF'
          # Add project specific ProGuard rules here.
          -keep class com.optibuy.collective.** { *; }
          -dontwarn okio.**
          -dontwarn retrofit2.**
          EOF
          
          echo "Creating placeholder app icons..."
          # Simple 1x1 transparent PNG for all icon sizes
          echo 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==' | base64 -d > android/app/src/main/res/mipmap-hdpi/ic_launcher.png
          echo 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==' | base64 -d > android/app/src/main/res/mipmap-mdpi/ic_launcher.png
          echo 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==' | base64 -d > android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
          echo 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==' | base64 -d > android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
          echo 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==' | base64 -d > android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
          
          echo "Android resources and code created successfully"
          
      - name: Create Upload Keystore
        script: |
          echo "=== Creating Upload Keystore ==="
          cd OptiBuy
          
          keytool -genkeypair \
            -alias upload \
            -keyalg RSA \
            -keysize 2048 \
            -validity 9125 \
            -keystore android/app/upload-keystore.jks \
            -dname "CN=OptiBuy Collective, OU=Mobile Apps, O=OptiBuy, L=Istanbul, ST=Istanbul, C=TR" \
            -storepass optibuy_upload_2025 \
            -keypass optibuy_upload_2025
          
          echo "Keystore created successfully"
          ls -la android/app/upload-keystore.jks
          keytool -list -v -keystore android/app/upload-keystore.jks -storepass optibuy_upload_2025 -alias upload | grep "SHA1"
          
      - name: Build AAB with System Gradle
        script: |
          echo "=== Building AAB for Google Play Console ==="
          cd OptiBuy/android
          
          echo "Using system gradle directly..."
          which gradle
          gradle --version
          
          echo "Running gradle clean..."
          gradle clean
          
          echo "Building AAB bundle..."
          gradle bundleRelease
          
          echo "=== AAB Build Verification ==="
          find . -name "*.aab" -type f
          ls -la app/build/outputs/bundle/release/ || echo "Release directory not found"
          
          if [ -f "app/build/outputs/bundle/release/app-release.aab" ]; then
              echo "AAB file created successfully"
              file app/build/outputs/bundle/release/app-release.aab
              
              cd ../..
              cp OptiBuy/android/app/build/outputs/bundle/release/app-release.aab ./optibuy-google-play-ready.aab
              cp OptiBuy/android/app/build/outputs/bundle/release/app-release.aab ./optibuy-$(date +%Y%m%d-%H%M).aab
              
              echo "=== GOOGLE PLAY CONSOLE UPLOAD READY ===" > google_play_deployment.txt
              echo "Package: com.optibuy.collective" >> google_play_deployment.txt
              echo "Version Code: 2" >> google_play_deployment.txt
              echo "Version Name: 1.2.0" >> google_play_deployment.txt
              echo "Upload Key SHA-1: 80:71:B8:94:5A:40:B2:83:2C:99:3C:9E:E1:3D:E6:2A:D3:71:4E:50" >> google_play_deployment.txt
              echo "Target SDK: 35 (Android 15)" >> google_play_deployment.txt
              echo "Status: Ready for Google Play Console Upload" >> google_play_deployment.txt
              
              echo "AAB generation completed successfully!"
              ls -la *.aab
          else
              echo "ERROR: AAB file not generated"
              echo "Checking all build outputs:"
              find OptiBuy/android -name "*.aab" -type f
              exit 1
          fi
          
    artifacts:
      - "*.aab"
      - "OptiBuy/android/app/build/outputs/bundle/release/app-release.aab"
      - "OptiBuy/android/app/upload-keystore.jks"
      - "google_play_deployment.txt"
    publishing:
      email:
        recipients:
          - build@optibuy.com
        notify:
          success: true
          failure: true
