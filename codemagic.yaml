workflows:
  optibuy-aab-build:
    name: OptiBuy AAB Production Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.optibuy.app"
        GOOGLE_PLAY_TRACK: internal
      node: v20.9.0
      java: 17
    scripts:
      - name: Clone and setup repository
        script: |
          echo "=== Repository setup ==="
          git clone --depth 1 https://github.com/yourusername/optibuy.git . || echo "Using existing files"
          ls -la
          
      - name: Install Node.js dependencies
        script: |
          echo "=== Installing dependencies ==="
          npm ci || npm install
          echo "Dependencies installed successfully"
          
      - name: Build web assets
        script: |
          echo "=== Building web assets ==="
          npm run build
          ls -la dist/
          
      - name: Setup Capacitor for Android
        script: |
          echo "=== Capacitor Android setup ==="
          npx cap add android --confirm
          npx cap sync android
          
      - name: Create upload keystore
        script: |
          echo "=== Creating upload keystore ==="
          keytool -genkeypair \
            -alias upload \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -keystore upload.keystore \
            -storepass optibuy2025 \
            -keypass optibuy2025 \
            -dname "CN=OptiBuy, OU=Development, O=OptiBuy, L=Istanbul, ST=Istanbul, C=TR"
          
          echo "=== Verifying keystore ==="
          keytool -list -v -keystore upload.keystore -storepass optibuy2025
          
      - name: Configure Android signing
        script: |
          cd android
          
          echo "=== Configure signing in build.gradle ==="
          cat >> app/build.gradle << 'EOF'
          
          android {
              signingConfigs {
                  release {
                      keyAlias 'upload'
                      keyPassword 'optibuy2025'
                      storeFile file('../../upload.keystore')
                      storePassword 'optibuy2025'
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }
          }
          EOF
          
      - name: Build signed AAB
        script: |
          cd android
          
          echo "=== Setting up Gradle wrapper ==="
          chmod +x gradlew
          ./gradlew wrapper --gradle-version 8.9
          
          echo "=== Building release AAB ==="
          ./gradlew clean
          ./gradlew bundleRelease --stacktrace
          
          echo "=== Verifying AAB creation ==="
          find . -name "*.aab" -exec ls -lh {} \;
          
          if [ -f "app/build/outputs/bundle/release/app-release.aab" ]; then
            echo "=== Success: AAB created ==="
            cp app/build/outputs/bundle/release/app-release.aab ../optibuy-production.aab
            ls -lh ../optibuy-production.aab
          else
            echo "ERROR: AAB not generated"
            exit 1
          fi
          
      - name: Generate upload certificate
        script: |
          echo "=== Generating upload certificate for Google Play ==="
          keytool -export -rfc \
            -keystore upload.keystore \
            -alias upload \
            -file optibuy-upload-certificate.pem \
            -storepass optibuy2025
          
          ls -la optibuy-upload-certificate.pem
          echo "Upload certificate ready for Google Play Console"
          
    artifacts:
      - optibuy-production.aab
      - optibuy-upload-certificate.pem
      - upload.keystore
    publishing:
      email:
        recipients:
          - build-notifications@optibuy.com
        notify:
          success: true
          failure: true
